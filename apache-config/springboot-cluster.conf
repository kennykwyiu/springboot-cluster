# Spring Boot Cluster Virtual Host Configuration
# This file configures Apache HTTP Server to act as a load balancer and reverse proxy
# for the Spring Boot application cluster, enabling sticky sessions.

# Define a proxy balancer for the Spring Boot cluster.
# This block groups the backend application servers (nodes) and defines their properties.
<Proxy balancer://springboot-cluster>
    # BalancerMember defines a backend server that is part of the load balancing pool.
    # Node 1 - Spring Boot instance running on localhost:8081.
    # route=node1 is crucial for sticky sessions, matching the route ID from the session cookie.
    BalancerMember http://127.0.0.1:8081 route=node1
    
    # Node 2 - Spring Boot instance running on localhost:8082.
    # route=node2 ensures requests with this route ID are directed to Node2.
    BalancerMember http://127.0.0.1:8082 route=node2
    
    # Load balancing method: byrequests distributes requests based on the number of requests served.
    ProxySet lbmethod=byrequests
    
    # Health check settings for monitoring the availability of backend nodes.
    ProxySet hcmethod=GET # Use HTTP GET method for health checks.
    ProxySet hcuri=/api/health # The URI on the backend servers to check for health status.
    ProxySet hcinterval=30 # Perform health checks every 30 seconds.
    
    # Connection settings for the proxy.
    ProxySet connectiontimeout=5 # Timeout for connecting to the backend server (in seconds).
    ProxySet ttl=60 # Time to live for a connection in the connection pool (in seconds).
</Proxy>

# Virtual Host for the Spring Boot Cluster.
# This block defines how Apache handles incoming HTTP requests on port 80.
<VirtualHost *:80>
    ServerName localhost # The primary hostname for this virtual host.
    ServerAlias springboot-cluster.local # Alternative hostnames for this virtual host.
    
    DocumentRoot /var/www/html # The directory from which Apache will serve files if not proxied.
    
    # Enable mod_rewrite, which is necessary for implementing sticky sessions.
    RewriteEngine On
    
    # RewriteCond checks if the CLUSTERSESSIONID cookie exists in the incoming request.
    # If it does, it extracts the route ID (the part after the second dot) and sets it as an environment variable ROUTEID.
    RewriteCond %{HTTP_COOKIE} CLUSTERSESSIONID=([^;]+)\.([^;]+)
    RewriteRule ^(.*)$ $1 [E=ROUTEID:%2] # Sets the ROUTEID environment variable for sticky sessions.
    
    # Proxy configuration directives.
    ProxyPreserveHost On # Passes the original Host header from the client to the backend server.
    ProxyRequests Off # Disables forward proxying, ensuring Apache acts only as a reverse proxy.
    
    # Exclude specific paths from being proxied to the backend cluster.
    # These paths are typically for Apache's own management interfaces.
    ProxyPass /balancer-manager ! # Excludes the balancer manager URL.
    ProxyPass /server-status ! # Excludes the server status URL.
    ProxyPass /server-info ! # Excludes the server info URL.
    
    # Proxy all other requests to the defined balancer, enabling sticky sessions.
    # stickysession=CLUSTERSESSIONID tells Apache to use the CLUSTERSESSIONID cookie for session affinity.
    ProxyPass / balancer://springboot-cluster/ stickysession=CLUSTERSESSIONID
    ProxyPassReverse / balancer://springboot-cluster/ # Adjusts the URL in the Location, Content-Location, and URI headers in HTTP responses.
    
    # Set headers for backend servers (important for correct URL rewriting in responses).
    ProxyPassReverse / http://127.0.0.1:8081/ # Ensures correct redirects from Node1.
    ProxyPassReverse / http://127.0.0.1:8082/ # Ensures correct redirects from Node2.
    
    # Security headers to enhance the application's security posture.
    Header always set X-Frame-Options "DENY" # Prevents clickjacking by disallowing embedding in iframes.
    Header always set X-Content-Type-Options "nosniff" # Prevents browsers from MIME-sniffing content.
    Header always set X-XSS-Protection "1; mode=block" # Enables XSS filtering in browsers.
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains" # Enforces HTTPS for a year, including subdomains.
    Header always set Referrer-Policy "strict-origin-when-cross-origin" # Controls referrer information sent with requests.
    
    # Remove default Server header and set a generic one to hide server details.
    Header unset Server
    Header always set Server "Apache"
    
    # CORS (Cross-Origin Resource Sharing) headers for API access.
    # Allows requests from any origin, methods, and headers, useful for frontend applications.
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    Header always set Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With"
    
    # Handle preflight (OPTIONS) requests for CORS.
    # These requests are sent by browsers before the actual request to check CORS policies.
    RewriteCond %{REQUEST_METHOD} OPTIONS
    RewriteRule ^(.*)$ $1 [R=200,L] # Responds with 200 OK for OPTIONS requests without processing further.
    
    # Logging configuration for this virtual host.
    ErrorLog ${APACHE_LOG_DIR}/springboot-cluster-error.log # Custom error log for the cluster.
    CustomLog ${APACHE_LOG_DIR}/springboot-cluster-access.log combined # Custom access log for the cluster.
    
    # Log level for debugging specific modules.
    LogLevel info rewrite:trace3 proxy:trace3 # Sets logging levels for info, rewrite, and proxy modules for detailed debugging.
</VirtualHost>

# Balancer manager location for monitoring and managing the load balancer.
<Location "/balancer-manager">
    SetHandler balancer-manager # Activates the balancer manager handler.
    Require local # Allows access only from the local machine.
    Require ip 127.0.0.1 # Explicitly allows localhost.
    Require ip 10.0.0.0/8 # Allows access from private IP range 10.0.0.0/8.
    Require ip 172.16.0.0/12 # Allows access from private IP range 172.16.0.0/12.
    Require ip 192.168.0.0/16 # Allows access from private IP range 192.168.0.0/16.
</Location>

# Server status location for viewing Apache server status.
<Location "/server-status">
    SetHandler server-status # Activates the server status handler.
    Require local # Allows access only from the local machine.
    Require ip 127.0.0.1
    Require ip 10.0.0.0/8
    Require ip 172.16.0.0/12
    Require ip 192.168.0.0/16
</Location>

# Server info location for viewing Apache server configuration details.
<Location "/server-info">
    SetHandler server-info # Activates the server info handler.
    Require local # Allows access only from the local machine.
    Require ip 127.0.0.1
    Require ip 10.0.0.0/8
    Require ip 172.16.0.0/12
    Require ip 192.168.0.0/16
</Location>

